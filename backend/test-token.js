// Script para testar o token do PagBank
require('dotenv').config()
const fetch = require('node-fetch')

const PAGBANK_TOKEN = process.env.PAGBANK_TOKEN
const PAGBANK_API_URL = process.env.NODE_ENV === 'production'
  ? 'https://api.pagseguro.com'
  : 'https://sandbox.api.pagseguro.com'

async function testToken() {
  console.log('\nüîç Testando token do PagBank...\n')
  console.log('üìç Ambiente:', process.env.NODE_ENV || 'development')
  console.log('üåê API URL:', PAGBANK_API_URL)
  console.log('üîë Token:', PAGBANK_TOKEN ? `${PAGBANK_TOKEN.substring(0, 20)}...` : '‚ùå N√ÉO CONFIGURADO')

  if (!PAGBANK_TOKEN) {
    console.log('\n‚ùå Token n√£o encontrado no .env')
    process.exit(1)
  }

  console.log('\nüì° Fazendo requisi√ß√£o de teste...\n')

  try {
    // Tentar criar um plano de teste
    const response = await fetch(`${PAGBANK_API_URL}/plans`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${PAGBANK_TOKEN}`,
      },
      body: JSON.stringify({
        reference_id: `TEST_${Date.now()}`,
        name: 'Plano de Teste - Deletar',
        description: 'Teste de valida√ß√£o de token',
        amount: {
          value: 10000, // R$ 100,00
          currency: 'BRL'
        },
        interval: {
          unit: 'MONTH',
          length: 1
        }
      })
    })

    const data = await response.json()

    if (response.ok) {
      console.log('‚úÖ TOKEN V√ÅLIDO!')
      console.log('‚úÖ Plano de teste criado:', data.id)
      console.log('\nüéâ Seu token est√° funcionando corretamente!')
      console.log('\n‚ö†Ô∏è  IMPORTANTE: Delete o plano de teste no painel do PagBank')
      console.log('   ID do plano:', data.id)
    } else {
      console.log('‚ùå TOKEN INV√ÅLIDO!')
      console.log('\nüìã Resposta do PagBank:')
      console.log(JSON.stringify(data, null, 2))

      if (data.error_messages) {
        console.log('\n‚ùå Erros:')
        data.error_messages.forEach(err => {
          console.log(`   - ${err.description}`)
        })
      }

      console.log('\nüîß Como resolver:')
      console.log('1. Acesse: https://pagseguro.uol.com.br/')
      console.log('2. V√° em: Integra√ß√µes ‚Üí Tokens')
      console.log('3. Gere um novo token de PRODU√á√ÉO')
      console.log('4. Atualize no arquivo: /home/nicolas/Agenda-HOF/backend/.env')
      console.log('5. Reinicie o backend')
    }

  } catch (error) {
    console.log('‚ùå ERRO ao testar token:')
    console.log(error.message)

    if (error.code === 'ENOTFOUND' || error.code === 'ECONNREFUSED') {
      console.log('\nüåê Problema de conex√£o com o PagBank')
      console.log('   Verifique sua conex√£o com a internet')
    }
  }
}

testToken()
